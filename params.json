{"name":"Jquery-stopwatch","body":"# Simple count-up jQuery plugin\r\n\r\n## Summary\r\n\r\nA jQuery plugin that renders a count-up clock from a defined start time. Supports `start`, `stop`, `toggle`, `reset`, and custom 'tick' event.\r\n\r\n## Usage\r\n\r\n* Initialise and start a default timer\r\n\r\n```js\r\n$('').stopwatch().stopwatch('start')\r\n```\r\n\r\n\r\n* Initialise and bind start/stop to click\r\n\r\n```js\r\n$('').stopwatch().click(function(){\r\n    $(this).stopwatch('toggle')\r\n})\r\n```\r\n\r\n* Bind to <code>tick</code> event and reset when 10 seconds has elapsed\r\n\r\n```js\r\n$('').stopwatch().bind('tick.stopwatch', function(e, elapsed){\r\n    if (elapsed >= 10000) {\r\n        $(this).stopwatch('reset');\r\n    }\r\n}).stopwatch('start')\r\n```\r\n\r\n* Start at non-zero elapsed time\r\n\r\n```js\r\n$('').stopwatch({startTime: 10000000}).stopwatch('start')\r\n```\r\n\r\n## Formatting\r\n\r\nProvided by the [jintervals](https://github.com/nene/jintervals) lib. If you don't \r\ninclude this library, the default output format `HH:MM:SS` is used.\r\n\r\n### Formats\r\n\r\nPass a format pattern as the `format` option. jsintervals provides a rich syntax for formatting \r\ntime intervals, perhaps best illustrated by some examples. \r\n\r\n```js\r\n'{MM}:{ss}' --> 01:05\r\n'{MMM}:{ss}' --> 001:05\r\n'{M}m, {s}s' --> 1m, 5s\r\n'{Minutes} and {seconds}' --> 1 minute and 5 seconds\r\n'{Greatest} ago' --> 1 minute ago\r\n```\r\n\r\nThe full documentation of the syntax is at http://code.google.com/p/jintervals/wiki/Documentation.\r\n\r\n### Custom formatter\r\n \r\nA formatter function can be supplied as `formatter` in options. It receives `milliseconds` and \r\n`options` and must return a string.\r\n\r\n## Licence\r\n\r\nCopyright (c) 2012 Rob Cowie. Licensed under the MIT license.","tagline":"A jQuery plugin that renders a count-up clock from a defined start time","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}